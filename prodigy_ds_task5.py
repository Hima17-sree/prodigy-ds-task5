# -*- coding: utf-8 -*-
"""prodigy-ds-task5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRxozqDKLHhXWf_4wzH5nGt0mdx2VOf3
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import files
files.upload()

data=pd.read_csv('Accident data.csv')
data

data.head()

data.info()

data = data[['Weather Conditions', 'Road Surface', 'Time (24hr)', 'Casualty Severity']]

# Analyze accident frequency by weather condition
weather_counts = data['Weather Conditions'].value_counts()
plt.figure(figsize=(8, 6))
weather_counts.plot(kind='bar', color='skyblue')
plt.title('Accident Distribution by Weather Conditions')
plt.xlabel('Weather Conditions')
plt.ylabel('Number of Accidents')
plt.xticks(rotation=35)
plt.show()

#analysis for Road Surface and Time (24hr)
data['Hour'] = pd.to_datetime(data['Time (24hr)']).dt.hour

# Group by hour and count accidents
hour_counts = data.groupby('Hour')['Casualty Severity'].count()

plt.figure(figsize=(5, 3))
plt.bar(hour_counts.index, hour_counts.values, color='pink')
plt.title('Accident Distribution by Hour of Day')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Accidents')
plt.xticks(rotation=35)
plt.show()

data.loc[0, 'Latitude'] = 37.7749
data.loc[0, 'Longitude'] = -122.4194

import folium
m = folium.Map(location=[38.89, -77.03], zoom_start=4)
for i, row in data.iterrows():
  if pd.notna(row['Latitude']) and pd.notna(row['Longitude']):
    folium.Marker([row['Latitude'], row['Longitude']], popup=f"Severity: {row['Casualty Severity']}").add_to(m)

from scipy.stats import chi2_contingency
contingency_table = pd.crosstab(data['Weather Conditions'], data['Casualty Severity'])

# Perform chi-square test to assess independence
chi2, pval, degrees_of_freedom, expected_freq = chi2_contingency(contingency_table.values)

# Print results (significant p-value indicates dependence)
print(f"Chi-Square Test: Weather Condition vs. Severity (p-value: {pval:.4f})")
if pval < 0.05:
    print("There is a statistically significant association between weather condition and accident severity.")
else:
    print("There is no statistically significant association between weather condition and accident severity.")

#analysis by heatmap
plt.figure(figsize=(10 ,5))
sns.heatmap(data.corr() , annot=True)

print(data.columns)

data.plot(kind='scatter', y='Latitude', x='Casualty Severity')